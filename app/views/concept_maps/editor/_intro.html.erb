<%= render 'concept_maps/editor/explanation' %>
<script type="module">

    $('#context-help').removeClass('d-none')

    let isInitialized = false
    let introModal

    const selectors = ["#header-button", "#header-code", "#header-search", "#context-help", ".vis-up", ".vis-zoomExtends"];
    const placements = ["right", "bottom", "left", "top", "right", "left"];

    // will render the translated introtexts
    // declares these variables
    // - texts
    // - btn_last
    // - btn_standard
    // - title
    <%= render 'concept_maps/editor/intro_texts' %>

    const textHtml = texts.map((text, i)=>{
        return ("<p class='text-justify' style='overflow:scrollable'>" + texts[i] + "<p class='text-center'><button class='btn btn-secondary' onclick='next();'>" + (i === texts.length-1 ? btn_last : btn_standard) + "</button></p>")
    })

    const titleHtml = title + " <button type='button' class='btn-close' onclick='stop();' aria-label='Close'><span aria-hidden='true' style='top: -2px;'></span></button>";

    let popover
    let popoverIndex = 0

    function next() {
        if (popover){
            popover.dispose()
        }

        const el = $(selectors[popoverIndex])[0]
        if (el) {
            popover = new bootstrap.Popover(
                el,
                {
                    viewport: {'selector': 'body', 'padding': 15},
                    placement: placements[popoverIndex],
                    title: titleHtml,
                    content: textHtml[popoverIndex],
                    html: true,
                    sanitize: false, // allow buttons with click handlers and all in the html content
                }
            )
            popover.show()
            popoverIndex++;
        }
    };

    function stop() {
        popoverIndex = selectors.length;
        if (popover){
            popover.dispose()
        }
    };

    const hideModal = () =>{
        introModal.hide()
    }

     $("#intro").on("hidden.bs.modal", function (e) {
        next();
    });

    if (!isInitialized) {
        introModal = new bootstrap.Modal(document.getElementById("intro"), { backdrop: "static" })
        introModal.show()
        isInitialized = true
    }

    // expose handlers to the DOM
    window.next = next
    window.stop = stop
    window.hideModal = hideModal
</script>
